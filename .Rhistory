dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x)))
modelos_anuales_precioReal
modelos_anuales_precioReal$airma_models[1]
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x)))
modelos_anuales_precioReal
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_anuales_precioReal
modelos_trimestrales_precioReal
modelos_anuales_precioReal
modelos_anuales_precioReal
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_anuales_precioReal
summarise_models <- modelos_anuales_precioReal %>%
select(Continente, airma_models, check_residuals) %>%
left_join(modelos_trimestrales_precioReal %>%
select(Continente, airma_models, check_residuals), by = Continente)
summarise_models <- modelos_anuales_precioReal %>%
select(Continente, airma_models, check_residuals) %>%
left_join(modelos_trimestrales_precioReal %>%
select(Continente, airma_models, check_residuals), by = "Continente")
summarise_models
summarise_models <- modelos_anuales_precioReal %>%
select(Continente, airma_models, check_residuals) %>%
left_join(modelos_trimestrales_precioReal %>%
select(Continente, airma_models, check_residuals),
by = "Continente", suffix = c("Anual", "Trimestral"))
summarise_models
summarise_models
summarise_models
summarise_models$check_residualsTrimestral[1]
summarise_models$check_residualsTrimestral[1][[1]]
summarise_models$check_residualsTrimestral[1][[1]]$p.value
summarise_models %>% mutate(p_val_Anual = map_dbl(check_residualsAnual, ~x$check_residualsTrimestral[[1]]$p.value))
summarise_models$check_residualsTrimestral
summarise_models$check_residualsTrimestral[[1]]
summarise_models %>% mutate(p_val_Anual = map_dbl(check_residualsAnual, ~x$[[1]]$p.value))
summarise_models %>% mutate(p_val_Anual = map_dbl(check_residualsAnual, ~x[[1]]$p.value))
summarise_models %>% mutate(p_val_Anual = map_dbl(check_residualsAnual, ~.x[[1]]$p.value))
summarise_models %>% mutate(p_val_Anual = map_dbl(check_residualsAnual, ~.x$p.value))
summarise_models %>% mutate(
p_val_Anual = map_dbl(check_residualsAnual, ~.x$p.value),
p_val_Trimestral = map_dbl(check_residualsTrimestral, ~.x$p.value))
summarise_models %>% mutate(
p_val_Anual = map_dbl(check_residualsAnual, ~.x$p.value),
p_val_Trimestral = map_dbl(check_residualsTrimestral, ~.x$p.value)) %>%
select(Continente, p_val_Anual, p_val_Trimestral)
summarise_models %>% mutate(
p_val_Anual = map_dbl(check_residualsAnual, ~.x$p.value),
p_val_Trimestral = map_dbl(check_residualsTrimestral, ~.x$p.value)) %>%
select(Continente, p_val_Anual, p_val_Trimestral)
summarise_models
summarise_models$airma_modelsAnual[1]
summarise_models$airma_modelsAnual[[1]]
?auto.arima
summarise_models$airma_modelsAnual[[1]]$loglik
summarise_models$airma_modelsAnual[[1]]
summarise_models %>% mutate(
log_likelihood_Anual = map_dbl(airma_modelsAnual, ~.x$loglik),
log_likelihood_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$loglik),
AIC_Anual = map_dbl(airma_modelsAnual, ~.x$aic),
AIC_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$aic),
AIC_Anual = map_dbl(airma_modelsAnual, ~.x$bic),
AIC_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$bic),
p_val_Anual = map_dbl(check_residualsAnual, ~.x$p.value),
p_val_Trimestral = map_dbl(check_residualsTrimestral, ~.x$p.value)) %>%
select(Continente, p_val_Anual, p_val_Trimestral)
summarise_models %>% mutate(
log_likelihood_Anual = map_dbl(airma_modelsAnual, ~.x$loglik),
log_likelihood_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$loglik),
AIC_Anual = map_dbl(airma_modelsAnual, ~.x$aic),
AIC_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$aic),
BIC_Anual = map_dbl(airma_modelsAnual, ~.x$bic),
BIC_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$bic),
p_val_Anual = map_dbl(check_residualsAnual, ~.x$p.value),
p_val_Trimestral = map_dbl(check_residualsTrimestral, ~.x$p.value)) %>%
select(Continente, log_likelihood_Anual, log_likelihood_Trimestral,
AIC_Anual, AIC_Trimestral,
BIC_Anual, BIC_Trimestral,
p_val_Anual, p_val_Trimestral)
summarise_models
summarise_models$check_residualsAnual
summarise_models$check_residualsAnual[[2]]
autoplot(summarise_models$check_residualsAnual[[2]])
checkresiduals(summarise_models$airma_modelsAnual[[2]])
prices %>% filter(FREQUENCY == "A" & SUBJECT == "REAL") %>% mutate(TIME = as.integer(TIME)) %>% group_by(Continente, TIME) %>% summarise(Median_value = median(Value))
prices %>% filter(FREQUENCY == "A" & SUBJECT == "REAL") %>% mutate(TIME = as.integer(TIME)) %>% group_by(Continente, TIME) %>% summarise(Median_value = median(Value)) %>% ggplot(aes(x = TIME, y = Median_value, color = Continente)) +
geom_line() +
theme_minimal() +
ggtitle("Precio real de la vivienda") +
labs(x = "Año", y = "Precio") +
theme(plot.title = element_text(hjust = 0.5)))
prices %>% filter(FREQUENCY == "A" & SUBJECT == "REAL") %>% mutate(TIME = as.integer(TIME)) %>% group_by(Continente, TIME) %>% summarise(Median_value = median(Value)) %>% ggplot(aes(x = TIME, y = Median_value, color = Continente)) +
geom_line() +
theme_minimal() +
ggtitle("Precio real de la vivienda") +
labs(x = "Año", y = "Precio") +
theme(plot.title = element_text(hjust = 0.5))
prices %>% filter(FREQUENCY == "A" & SUBJECT == "REAL") %>% mutate(TIME = as.integer(TIME)) %>% group_by(Continente, TIME) %>% summarise(Median_value = mean(Value)) %>% ggplot(aes(x = TIME, y = Median_value, color = Continente)) +
geom_line() +
theme_minimal() +
ggtitle("Precio real de la vivienda") +
labs(x = "Año", y = "Precio") +
theme(plot.title = element_text(hjust = 0.5))
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL")
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
group_by(Continente, as.numeric(TIME))
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME)
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value))
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente)
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest()
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(n = map_dbl(~.x[1]))
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(n = map_dbl(data, ~.x[1]))
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(n = map_dbl(data, ~dim(.x)[1]))
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$Value)))
prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest()
aux <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest()
aux
aux$data
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value))
prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
mutate(year = as.integer(str_sub(TIME, end = 4))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value))
prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 5)))
prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 6)))
prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7)))
prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value))
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest()
prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F)))
summarise_models <- modelos_anuales_precioReal %>%
select(Continente, airma_models, check_residuals) %>%
left_join(modelos_trimestrales_precioReal %>%
select(Continente, airma_models, check_residuals),
by = "Continente", suffix = c("Anual", "Trimestral"))
summarise_models
summarise_models %>% mutate(
log_likelihood_Anual = map_dbl(airma_modelsAnual, ~.x$loglik),
log_likelihood_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$loglik),
AIC_Anual = map_dbl(airma_modelsAnual, ~.x$aic),
AIC_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$aic),
BIC_Anual = map_dbl(airma_modelsAnual, ~.x$bic),
BIC_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$bic),
p_val_Anual = map_dbl(check_residualsAnual, ~.x$p.value),
p_val_Trimestral = map_dbl(check_residualsTrimestral, ~.x$p.value)) %>%
select(Continente, log_likelihood_Anual, log_likelihood_Trimestral,
AIC_Anual, AIC_Trimestral,
BIC_Anual, BIC_Trimestral,
p_val_Anual, p_val_Trimestral)
summarise_models
modelos_anuales_precioReal
(modelos_anuales_precioReal %>% filter(Continente == "América"))$ts_objects
(modelos_anuales_precioReal %>% filter(Continente == "América"))$ts_objects[[1]]
for (continente in modelos_anuales_precioReal$Continente){
t_s <- (modelos_anuales_precioReal %>% filter(Continente == continente))$ts_objects[[1]]
best_model <- (modelos_anuales_precioReal %>%
filter(Continente == continente))$airma_models[[1]]
autoplot(t_s, color = "black") +
autolayer(fitted(best_model), color = "royalblue1")
}
print(autoplot(t_s, color = "black") +
autolayer(fitted(best_model), color = "royalblue1"))
for (continente in modelos_anuales_precioReal$Continente){
t_s <- (modelos_anuales_precioReal %>% filter(Continente == continente))$ts_objects[[1]]
best_model <- (modelos_anuales_precioReal %>%
filter(Continente == continente))$airma_models[[1]]
print(autoplot(t_s, color = "black") +
autolayer(fitted(best_model), color = "royalblue1"))
}
for (continente in modelos_trimestrales_precioReal){
t_s <- (modelos_trimestrales_precioReal %>% filter(Continente == continente))$ts_objects[[1]]
best_model <- (modelos_trimestrales_precioReal %>%
filter(Continente == continente))$airma_models[[1]]
print(autoplot(t_s, color = "black") +
autolayer(fitted(best_model), color = "royalblue1"))
}
for (continente in modelos_trimestrales_precioReal$Continente){
t_s <- (modelos_trimestrales_precioReal %>% filter(Continente == continente))$ts_objects[[1]]
best_model <- (modelos_trimestrales_precioReal %>%
filter(Continente == continente))$airma_models[[1]]
print(autoplot(t_s, color = "black") +
autolayer(fitted(best_model), color = "royalblue1"))
}
library(urca)
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F))) %>%
mutate(estacionariedad = map(airma_models, ~urca::ur.df(.x$residuals)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F))) %>%
mutate(estacionariedad = map(airma_models, ~urca::ur.df(.x$residuals)))
data(nporg)
gnp <- na.omit(nporg[, "gnp.r"])
gnp.l <- log(gnp)
kpss.gnp <- ur.kpss(gnp.l, type="tau", lags="short")
summary(kpss.gnp)
library(feast)
install.packages("feasts")
library(feast)
library(feast)
library("feast")
library("feasts")
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F))) %>%
mutate(estacionariedad = map(airma_models, ~unitroot_kpss(.x)))
library(urca)
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F))) %>%
mutate(estacionariedad = map(airma_models, ~urca::ur.df(.x$residuals)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F))) %>%
mutate(estacionariedad = map(airma_models, ~urca::ur.df(.x$residuals)))
summarise_models <- modelos_anuales_precioReal %>%
select(Continente, airma_models, check_residuals) %>%
left_join(modelos_trimestrales_precioReal %>%
select(Continente, airma_models, check_residuals),
by = "Continente", suffix = c("Anual", "Trimestral"))
summarise_models
summarise_models <- modelos_anuales_precioReal %>%
select(Continente, airma_models, check_residuals, estacionariedad) %>%
left_join(modelos_trimestrales_precioReal %>%
select(Continente, airma_models, check_residuals, estacionariedad),
by = "Continente", suffix = c("Anual", "Trimestral"))
summarise_models
summarise_models$estacionariedadAnual
summarise_models$estacionariedadAnual[[1]]
modelos_anuales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "A" & SUBJECT == "REAL") %>%
mutate(TIME = as.numeric(TIME)) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F))) %>%
mutate(estacionariedad = map(airma_models, ~urca::ur.kpss(.x$residuals)))
modelos_trimestrales_precioReal <- prices %>%
dplyr::filter(FREQUENCY == "Q" & SUBJECT == "REAL") %>%
mutate(year = as.integer(str_sub(TIME, end = 4)),
trimestre = as.integer(str_sub(TIME, start = 7))) %>%
group_by(Continente, TIME) %>% dplyr::summarise(precio_mediano = mean(Value)) %>%
dplyr::group_by(Continente) %>% nest() %>%
mutate(ts_objects = map(data, ~ts(.x$precio_mediano))) %>%
mutate(airma_models = map(ts_objects, ~auto.arima(.x))) %>%
mutate(check_residuals = map(airma_models, ~forecast::checkresiduals(.x, plot = F))) %>%
mutate(estacionariedad = map(airma_models, ~urca::ur.kpss(.x$residuals)))
summarise_models <- modelos_anuales_precioReal %>%
select(Continente, airma_models, check_residuals, estacionariedad) %>%
left_join(modelos_trimestrales_precioReal %>%
select(Continente, airma_models, check_residuals, estacionariedad),
by = "Continente", suffix = c("Anual", "Trimestral"))
summarise_models
summarise_models$estacionariedadAnual[[1]]
summarise_models$estacionariedadAnual[[1]][[1]]
summarise_models$estacionariedadAnual[[1]]
summarise_models$estacionariedadAnual[[1]]$teststat
summarise_models$estacionariedadAnual[[1]]
class(summarise_models$estacionariedadAnual[[1]])
str(summarise_models$estacionariedadAnual[[1]])
summarise_models$estacionariedadAnual[[1]]@teststat
summarise_models %>% mutate(
log_likelihood_Anual = map_dbl(airma_modelsAnual, ~.x$loglik),
log_likelihood_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$loglik),
AIC_Anual = map_dbl(airma_modelsAnual, ~.x$aic),
AIC_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$aic),
BIC_Anual = map_dbl(airma_modelsAnual, ~.x$bic),
BIC_Trimestral = map_dbl(airma_modelsTrimestral, ~.x$bic),
p_val_Anual = map_dbl(check_residualsAnual, ~.x$p.value),
p_val_Trimestral = map_dbl(check_residualsTrimestral, ~.x$p.value),
estacionariedad_Anual = map_dbl(estacionariedadAnual, ~.x@teststat),
estacionariedad_Trimestral = map_dbl(estacionariedadTrimestral, ~.x@teststat)) %>%
select(Continente, log_likelihood_Anual, log_likelihood_Trimestral,
AIC_Anual, AIC_Trimestral,
BIC_Anual, BIC_Trimestral,
p_val_Anual, p_val_Trimestral)
prices
prices %>% group_by(´País´)
prices %>% group_by(`País`)
prices %>% group_by(Continente, `País`)
prices %>% group_by(Continente, `País`) %>% count()
prices %>% group_by(Continente) %>% count(`País`)
prices %>% group_by(Continente, `País`) %>% count()
prices %>% group_by(Continente) %>% count()
library(tidyverse)
source("functions.R")
library(patchwork)
library(latex2exp)
library(knitr)
library(kableExtra)
library(forecast)
library(TSA)
library(tibble)
autoplot(nottem, colour = "#0A63E9") +
general_theme +
labs(x = "Tiempo", y = "Temperatura promedio")
bookdown::render_book("index.Rmd",output_dir = "docs")
bookdown::render_book("index.Rmd",output_dir = "docs")
bookdown::render_book("index.Rmd",output_dir = "docs")
bookdown::render_book("index.Rmd",output_dir = "docs")
git init
